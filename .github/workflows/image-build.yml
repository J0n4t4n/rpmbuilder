name: Image Build

on:
  push: {}
  schedule:
    # run build every week
    - cron:  '0 0 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.distro }}:${{ matrix.version }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        distro: [fedora, centos, rockylinux]
        version: []
        include:
          - distro: fedora
            version: 35
          - distro: fedora
            version: 36
          - distro: fedora
            version: latest
          - distro: centos
            version: 7
          - distro: rockylinux
            version: 8
          - distro: rockylinux
            version: 9
    steps:
      - uses: actions/checkout@v1
      - name: Build Image
        env:
          BASE_IMAGE: docker.io/${{ matrix.distro }}:${{ matrix.version }}
          TARGET_IMAGE: rpmbuilder:${{ matrix.distro }}-${{ matrix.version }}
        run: ./bin/build.sh
      - name: Test Image
        env:
          TARGET_IMAGE: rpmbuilder:${{ matrix.distro }}-${{ matrix.version }}
        run: ./bin/test.sh
      - name: Publish Image (docker.io)
        if: github.ref == 'refs/heads/main'
        env:
          IMAGE: rpmbuilder:${{ matrix.distro }}-${{ matrix.version }}
          REGISTRY: docker.io/alectolytic
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
        run: |
          docker tag ${IMAGE} ${REGISTRY}/${IMAGE}
          docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}" docker.io
          docker push ${REGISTRY}/${IMAGE}
      - name: Publish Image (quay.io)
        if: github.ref == 'refs/heads/main'
        env:
          IMAGE: rpmbuilder:${{ matrix.distro }}-${{ matrix.version }}
          REGISTRY: quay.io/abn
          REGISTRY_USER: ${{ secrets.QUAY_USER }}
          REGISTRY_TOKEN: ${{ secrets.QUAY_TOKEN }}
        run: |
          docker tag ${IMAGE} ${REGISTRY}/${IMAGE}
          docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}" quay.io
          docker push ${REGISTRY}/${IMAGE}
